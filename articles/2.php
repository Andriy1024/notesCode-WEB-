<!DOCTYPE html>
<html>
<head>
	<title>8 принципів планування розробки, що спрощують життя</title>
	<meta name="viewport" content="width=device-width, initial-scale=1.0">
	<link rel="stylesheet" type="text/css" href="../style/reset.css">
	<link rel="stylesheet" type="text/css" href="../style/style.css">
	<script type="text/javascript" src="../js/jquery-3.3.1.min.js"></script>
	<script type="text/javascript" src="../js/jquery.shuffleLetters.js"></script>
	<script type="text/javascript" src="../js/script.js" defer></script>
	<link href="../img/ICON.ico" rel="shortcut icon" type="image/x-icon">
	<meta charset="utf-8">
</head>
<body>
<?php require "../index/top.php";?>
<main>
	<div class="information">
		<h1>8 принципів планування розробки, що спрощують життя</h1>
		<p>Скажімо прямо,  людині планувати важко. Люди  сильні імпровізацією і умінням збиратися в критичний момент, видаючи вражаючі результати. Але життя показує, що команда програмістів на подібній ідеології далеко не заїде. Героїчні зусилля в один час не зможуть компенсувати пофігізм в інше.</p>
        <p>Що спільного у зомбі-апокаліпсису і розробки ПЗ? Прості правила допомагають пережити і те, і інше.</p>
        <p>Етап планування передбачає усвідомлену і цілеспрямовану діяльність команди на шляху до досягнення результату. Визначити завдання, розбити на віхи, передбачити терміни - необхідний крок на шляху втілення задуманого. Особливо, якщо справа стосується гнучкої методології Agile, яку вважаємо найкращою.</p>
        <p>Команди розробників допускають такі помилки при плануванні створення ПО.</p>
        <h2>1. Планувати терміни повинні програмісти, а не менеджери</h2><hr>
        <p>Часта помилка, коли керівник проекту, який знає належним чином обсяг і специфіку завдань, встановлює терміни проекту не відповідно до досвіду, можливостями і компетенціями команди, а спираючись на власні уявлення, бажання або запити клієнта. Програмістам в подібних групах не позаздриш. Розбіжності запланованих і реальних термінів становить 40-80%. Атмосфера в колективі створюється гнітюча і відбиває бажання працювати. Проблеми слідують одна за одною, а винними виставляються безпосередні розробники.</p>
        <h2>2. Необхідно заздалегідь визначати приблизні терміни здачі всього проекту і реальний час вирішення завдання</h2><hr>
        <p>Відпускати процеси на самоплив ні в якому разі не можна. Ігнорування процедури планування призводить до розхлябаності, низьку мотивацію розробників в попередні дедлайну періоди, до нерозуміння командою, що робити, куди рухатися і що потрібно отримати в результаті. В об'єднаннях, де приблизні терміни здачі проекту не визначаються, бажано задуматися про те, що подібний хаос до добра не доведе.</p>
        <h2>3. Проект розбивайте на дрібні етапи з чіткими цілями і обов'язковим обговоренням результатів</h2><hr>
        <p>Застосування принципу необхідно для протидії закону Паркінсона, який визначає, що загальний обсяг роботи завжди буде збільшуватися, щоб заповнити весь виділений на роботу час. Слідуючи раді, можна уникнути бажання старанно працювати лише незадовго до терміну здачі проекту. Розбивка процесу досягнення глобальної мети на контрольні періоди з необхідністю виконання конкретних завдань протягом тижня - двох дозволить використовувати робочий потенціал команди по максимуму. При зазначеному підході підтримується високий рівень мотивації і працездатності розробників протягом усього періоду створення ПЗ і збільшується ймовірність досягнення бажаних цілей.</p>
        <h2>4. Члени команди повинні максимально щільно взаємодіяти один з одним</h2><hr>
        <p>Перш за все підвищується згуртованість колективу і стимулюється надання взаємодопомоги. При недостатньому спілкуванні між членами об'єднання відсутній «командний дух», що забезпечує злагоджену роботу. Спільна продуктивна діяльність задовольняє соціальні потреби людини у відчутті значущості виконуваної роботи. Дотримання принципу дозволяє безболісно замінити будь-якого члена команди, тому що учасники в курсі хто, що і як робить.</p>
        <h2>5. Включайте резерв часу для покриття форс-мажору, нових вимог замовника, відпусток і свят, на інтеграцію і тестування</h2><hr>
        <p>На початковому етапі планування можна передбачити всі ситуації. Тому потрібно зарезервувати час про запас, щоб команді не довелося поспішати і, як наслідок, робити помилки. Не варто ігнорувати необхідність налагодження і доведення ПО до рівня стабільної роботи і прийнятного кількості багів. Випуск сирого продукту через жорсткої економії пір не розумний. Методологія Agile передбачає мінливість зовнішніх умов і необхідність швидкої і безболісної адаптації до них.</p>
        <h2>6. Не можна поспішати, порушувати план і зменшувати час розробки ПЗ</h2><hr>
        <p>Часта помилка менеджерів, які думають, що програмісти зможуть потягнути будь-які терміни. По-перше, команда демотивує, саботує процес праці або пише заяви за власним бажанням. По-друге, різке прискорення робочих операцій виснажує ресурси організму і психіки людини, веде до професійного вигорання. По-третє, завищений темп призводить до збільшення кількості помилок в коді. На налагодження і виправлення в майбутньому буде потрібно значно більше часу, ніж вийде заощадити подібним чином.</p>
        <h2>7. Документуйте планування за допомогою відповідного таск-менеджера</h2><hr>
        <p>Вибір конкретної програми є питання смаку. Плани слід фіксувати. Потрібно наочність як для розробників, так і для клієнтів, зберігаючи можливість для внесення змін. Це дозволяє поліпшити взаєморозуміння команди розробників, менеджменту і клієнта. Знижується кількість суперечок щодо трактування робочих дій. Чіткість формулювання плану допоможе уникнути двоякого тлумачення.</p>
        <h2>8. Розставляйте пріоритети завданням і концентруйтеся на головному</h2><hr>
        <p>Намагайтеся в першу чергу реалізовувати найбільш важливий функціонал. Майте на увазі, що якимись фичами в процесі розробки доведеться пожертвувати, так само як і реалізацією частини ідей. А розставити пріоритети можливо виключно через спілкування і обмін думками.</p>
        <p>А що ви думаєте з приводу планування в розробці ПЗ? Залишайте свої коментарі до статті. Ми будемо раді почути вашу думку.</p>
        <p>Статтю взято з: https://habr.com/company/edison/blog/272085/</p>
        <div class="comments">
            <div class="fb-comments"  data-width="100%" data-numposts="5"></div>
            <script>
                     var url = location.href;
                     var comm = document.getElementsByClassName('fb-comments')[0];
                     comm.setAttribute('data-href',url);
            </script>
            </div>
        </div> 
</main>
<?php require "../index/bottom.php";?>
</body>
</html>